AWSTemplateFormatVersion: '2010-09-09'
Description: This template will build a Windows Server with specified roles and features.  It will rename the host to specified name and add the machine to the domain.
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC which this container will be depolyed to
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: Please specify a valid EC2 Instance type
    Type: String
    Default: t3.small
  Roles:
    Description: A SPACE seperated list of roles that you want to enable on this instance.  Valid values are AD-Certificate, AD-Domain-Services, ADLDS, DHCP, DNS, Fax, File-Services, NPAS, Print-Services, Web-Server, and WDS.
    Type: String
    Default: None
    AllowedPattern: "(((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS))(((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS)))*)|(None)"
  Features:
    Description: A SPACE seperated list of features that you want to enable on this instance. Valid values are NET-Framework, BITS, BitLocker, BranchCache, CMAK, Desktop-Experience, DAMC, Failover-Clustering, GPMC, Ink-Handwriting, Internet-Print-Client, ISNS, LPR-Port-Monitor, MSMQ, Multipath-IO, NLB, PNRP, qWave, Remote-Assistance, RDC, RPC-over-HTTP-Proxy, Simple-TCPIP, SMTP-Server, SNMP-Services, Storage-Mgr-SANS, Subsystem-UNIX-Apps, Telnet-Client, TFTP-Client, Biometric-Framework, Windows-Internal-DB, PowerShell-ISE, Backup-Features, Migration, WSRM, TIFF-IFilter, WinRM-IIS-Ext, WINS-Server, Wireless-Networking, and XPS-Viewer.
    Type: String
    Default: None
    AllowedPattern: "(((NET\\-Framework)|(BITS)|(BitLocker)|(BranchCache)|(CMAK)|(Desktop\\-Experience)|(DAMC)|(Failover\\-Clustering)|(GPMC)|(Ink\\-Handwriting)|(Internet\\-Print\\-Client)|(ISNS)|(LPR\\-Port\\-Monitor)|(MSMQ)|(Multipath\\-IO)|(NLB)|(PNRP)|(qWave)|(Remote\\-Assistance)|(RDC)|(RPC\\-over\\-HTTP\\-Proxy)|(Simple\\-TCPIP)|(SMTP\\-Server)|(SNMP\\-Services)|(Storage\\-Mgr\\-SANS)|(Subsystem\\-UNIX\\-Apps)|(Telnet\\-Client)|(Telnet\\-Server)|(TFTP\\-Client)|(Biometric\\-Framework)|(Windows\\-Internal\\-DB)|(PowerShell\\-ISE)|(Backup\\-Features)|(Migration)|(WSRM)|(TIFF\\-IFilter)|(WinRM\\-IIS\\-Ext)|(WINS\\-Server)|(Wireless\\-Networking)|(XPS\\-Viewer))(((NET\\-Framework)|(BITS)|(BitLocker)|(BranchCache)|(CMAK)|(Desktop\\-Experience)|(DAMC)|(Failover\\-Clustering)|(GPMC)|(Ink\\-Handwriting)|(Internet\\-Print\\-Client)|(ISNS)|(LPR\\-Port\\-Monitor)|(MSMQ)|(Multipath\\-IO)|(NLB)|(PNRP)|(qWave)|(Remote\\-Assistance)|(RDC)|(RPC\\-over\\-HTTP\\-Proxy)|(Simple\\-TCPIP)|(SMTP\\-Server)|(SNMP\\-Services)|(Storage\\-Mgr\\-SANS)|(Subsystem\\-UNIX\\-Apps)|(Telnet\\-Client)|(TFTP\\-Client)|(Biometric\\-Framework)|(Windows\\-Internal\\-DB)|(PowerShell\\-ISE)|(Backup\\-Features)|(Migration)|(WSRM)|(TIFF\\-IFilter)|(WinRM\\-IIS\\-Ext)|(WINS\\-Server)|(Wireless\\-Networking)|(XPS\\-Viewer)))*()*)|(None)"
  ImageId :
    Type : 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base'
  HostName:
    Type: String
    Description: Hostname of the new EC2 Instance
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: First subnet to use for the container
  VolumeSize:
    Type: String
    Description: Volume Size in GB
  SourceCidrForRDP:
    Description: IP Cidr from which you are likely to RDP into the instances.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$"
  ApplicationTag:
    Type: String
    MinLength: 2
    MaxLength: 10
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only letters and numbers (2 to 10)
  EnvironmentTag:
    Type: String
    AllowedValues:
      - dev
      - test
      - uat
      - prelive
      - live
  SystemTag:
    Type: String
    MinLength: 2
    MaxLength: 20
    ConstraintDescription: Must be between 2 to 20 characters
  SecurityTag:
    Type: String
    MinLength: 2
    MaxLength: 20
    ConstraintDescription: Must be between 2 to 20 characters

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable RDP
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp:
          Ref: SourceCidrForRDP
      VpcId: 
        Ref: VpcId
  
  WindowsServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          ascending:
            - setup
            - rename
            - install_roles_features
            - finalise
        setup:
          files:
            c:\\cfn\\cfn-hup.conf:
              content:
                !Sub |
                  [main]
                  stack = ${AWS::StackId}
                  region = ${AWS::Region}
            c:\\cfn\\hooks.d\\cfn-auto-reloader.conf:
              content:
                !Sub |
                  [cfn-auto-reloader-hook]
                  triggers=post.update
                  path=Resources.WindowsServer.Metadata.AWS::CloudFormation::Init
                  action=cfn-init.exe -v -s ${AWS::StackId} -r WindowsServer --region ${AWS::Region}
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - c:\\cfn\\cfn-hup.conf
                - c:\\cfn\\hooks.d\\cfn-auto-reloader.conf
        rename:
          commands:
            1-rename-host:
              command:
                Fn::Join:
                - ''
                - - powershell.exe "Rename-Computer -NewName "
                  - Ref: HostName
                  - " -force -restart"
        install_roles_features:
          commands:
            1-install-roles:
              command:
                Fn::Join:
                - ''
                - - if not "None" EQU "
                  - Ref: Roles
                  - "\" (powershell.exe install-windowsfeature -name "
                  - Ref: Roles
                  - " -IncludeManagementTools -restart)"
            2-install-features:
              command:
                Fn::Join:
                - ''
                - - if not "None" EQU "
                  - Ref: Features
                  - "\" (powershell.exe install-windowsfeature -name "
                  - Ref: Features
                  - " -restart)"
        finalise:
          commands:
            1-signal-success:
              command:
                Fn::Join:
                - ''
                - - cfn-signal.exe -e %ERRORLEVEL% "
                  - Fn::Base64:
                      Ref: WindowsServerWaitHandle
                  - ''
    Properties:
      InstanceType:
        Ref: InstanceType
      SecurityGroupIds:
        - !GetAtt InstanceSecurityGroup.GroupId
      ImageId:
        Ref: ImageId
      SubnetId: 
        Ref: SubnetId
      KeyName:
        Ref: KeyName
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          VolumeSize: 
            Ref: VolumeSize
      UserData:
        Fn::Base64:
          !Sub |
            <script>
            echo %DATE% %TIME% >> C:\instance-start.txt
            cfn-init.exe -v -s ${AWS::StackId} -r WindowsServer -c ascending --region ${AWS::Region}
            </script>
      Tags:
        - Key: Name
          Value: !Sub ${HostName}
        - Key: Application
          Value: !Sub ${ApplicationTag}
        - Key: Environment
          Value: !Sub ${EnvironmentTag}
        - Key: SystemTag
          Value: !Sub ${SystemTag}
        - Key: Security
          Value: !Sub ${SecurityTag}

  WindowsServerWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  WindowsServerWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: WindowsServer
    Properties:
      Handle:
        Ref: WindowsServerWaitHandle
      Timeout: '1800'

Outputs:
  RolesEnabled:
    Value:
      Ref: Roles
    Description: Roles enabled on this instance.
  FeaturesEnabled:
    Value:
      Ref: Features
    Description: Features enabled on this instance.
